MVC패턴(모델2) 기반 게시판 구축

1. 데이터베이스 구축(테이블, 시퀀스 생성)
2. 샘플 데이터 입력
3. DBCP 셋팅
4. 각종 라이브러리 구축(OJDBC, JSTL)
5. Vo 객체 생성
6. DBManager 객체 생성
7. DAO 객체 생성(싱글턴 패턴)
	- 각 쿼리를 호출하는 메서드
	- 게시물 등록
	- 게시물 조회(카운트 증가)
	- 게시물 상세
	- 게시물 수정
	- 게시물 삭제
	- 게시물 암호 확인
8. CSS 생성
9. 요청 처리를 위한 서블릿 생성 : 보드서블릿
10. 요청 기능 연결 클래스 생성 : 액션팩토리
11. 각 기능 클래스를 묶는 인터페이스 생성 : 액션
12. 모든 게시물 조회 기능
	- 게시물 조회 기능을 처리하는 클래스 생성
	- 뷰(화면) 구축

--------------------------------------------------
13. 글 등록
	- 폼 요청 : 게시물 등록 폼을 요청할 클래스 생성
	- 폼 요청 : 게시물 등록 폼 생성
	- 게시물 등록 : 게시물을 등록하기 위한 기능을 처리할 클래스 생성
	- 게시물 등록 : 데이터베이스에 등록하기위한 메서드 ㅇ성
	- 각 기능 클래스를 연결클래스에 생성
	
--------------------------------------------------
14. 글 상세 보기
	- 게시물 상세 보기를 위한 기능을 처리할 클래스 생성
	- 데이터베이스에서 해당 게시글 정보를 알아오기 위한 메서드 생성
	- 조회수 증가 메서드 생성
	- 해당 정보를 반영한 뷰 생성
	- 기능 클래스를 액션팩토리에 등록
	
--------------------------------------------------
15. 수정/삭제를 위한 체크
	- 암호 체크 폼으로 이동하기 위한 기능을 처리할 클래스 생성
	- 암호 체크 폼을 보여주기 위한 뷰 생성
	- 암호 체크 기능을 처리하기 위한 클래스 생성
	- 데이터베이스에서 암호를 확인하기 위한 dao 메서드 생성
	- 암호 일치 실패시 암호 체크 폼으로 돌아가는 기능 생성
	- 암호 일치시 체크 성공 뷰 생성
	
--------------------------------------------------
16. 글 수정
	- 글 수정 폼으로 이동하기 위한 클래스 생성
	- 글 수정 폼 뷰 생성
	- 글 수정 기능을 위한 클래스 생성
	- 데이터베이스에 글 수정을 처리하기 위한 dao 생성
	- 글 수정 후 이동할 페이지 목록보기 이동
	- 액션팩토리에 클래스 등록

--------------------------------------------------
17. 글 삭제
	- 글 삭제 기능을 처리하기 위한 클래스 생성
	- dao 글 삭제 기능을 하깅 위한 메서드 생성
	- 글 삭제 후에는 목록보기로 이동

--------------------------------------------------
18. 페이징
